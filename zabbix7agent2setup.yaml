---
- name: Instalar Zabbix Agent 2 seg√∫n el sistema operativo
  hosts: all
  become: yes

  vars:
    zabbix_server_ip: "zabbix.vozitel.com"
    repo_urls:
      CentOS6: "https://repo.zabbix.com/zabbix/7.0/rhel/6/x86_64/zabbix-release-latest.el6.noarch.rpm"
      CentOS7: "https://repo.zabbix.com/zabbix/7.0/rhel/7/x86_64/zabbix-release-latest.el7.noarch.rpm"
      Debian10: "https://repo.zabbix.com/zabbix/7.0/debian/pool/main/z/zabbix-release/zabbix-release_latest+debian10_all.deb"
      Debian11: "https://repo.zabbix.com/zabbix/7.0/debian/pool/main/z/zabbix-release/zabbix-release_latest+debian11_all.deb"
      Debian12: "https://repo.zabbix.com/zabbix/7.0/debian/pool/main/z/zabbix-release/zabbix-release_latest+debian12_all.deb"
      Ubuntu20: "https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest+ubuntu20.04_all.deb"
      Ubuntu22: "https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest+ubuntu22.04_all.deb"
      Ubuntu24: "https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest+ubuntu24.04_all.deb"

  tasks:
    - name: Determine the appropriate repo URL
      set_fact:
        repo_url: "{% if ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution_version'] | regex_search('^6') %} {{ repo_urls['CentOS6'] }} {% elif ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution_version'] | regex_search('^7') %} {{ repo_urls['CentOS7'] }} {% elif ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution_version'] | regex_search('^10') %} {{ repo_urls['Debian10'] }} {% elif ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution_version'] | regex_search('^11') %} {{ repo_urls['Debian11'] }} {% elif ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution_version'] | regex_search('^12') %} {{ repo_urls['Debian12'] }} {% elif ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution'] == 'Ubuntu' and ansible_facts['distribution_version'] | regex_search('^20') %} {{ repo_urls['Ubuntu20'] }} {% elif ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution'] == 'Ubuntu' and ansible_facts['distribution_version'] | regex_search('^22') %} {{ repo_urls['Ubuntu22'] }} {% elif ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution'] == 'Ubuntu' and ansible_facts['distribution_version'] | regex_search('^24') %} {{ repo_urls['Ubuntu24'] }} {% else %} '' {% endif %}"

    - name: Install Zabbix repository
      when: repo_url != ''
      ansible.builtin.yum:
        name: "{{ repo_url }}"
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Download Zabbix repository
      when: repo_url != ''
      ansible.builtin.get_url:
        url: "{{ repo_url }}"
        dest: /tmp/zabbix-release.deb
      when: ansible_facts['os_family'] == "Debian"

    - name: Install Zabbix repository (Debian)
      when: ansible_facts['os_family'] == "Debian"
      ansible.builtin.command:
        cmd: dpkg -i /tmp/zabbix-release.deb

    - name: Clean yum cache (CentOS)
      when: ansible_facts['os_family'] == "RedHat"
      ansible.builtin.command:
        cmd: yum clean all

    - name: Update package index (Debian)
      when: ansible_facts['os_family'] == "Debian"
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Zabbix Agent 2 and plugins
      ansible.builtin.apt:
        name: zabbix-agent2,zabbix-agent2-plugin-*
        state: present
      when: ansible_facts['os_family'] == "Debian"

    - name: Install Zabbix Agent 2 and plugins (CentOS)
      ansible.builtin.yum:
        name: zabbix-agent2,zabbix-agent2-plugin-*
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Configure Zabbix server address
      ansible.builtin.lineinfile:
        path: /etc/zabbix/zabbix_agent2.conf
        regexp: '^Server='
        line: "Server={{ zabbix_server_ip }}"
        state: present

    - name: Restart and enable Zabbix Agent 2 service
      ansible.builtin.systemd:
        name: zabbix-agent2
        state: restarted
        enabled: yes
